"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/hello";
exports.ids = ["pages/api/hello"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "(api)/./src/pages/api/hello.js":
/*!********************************!*\
  !*** ./src/pages/api/hello.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _server_mySQL__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/mySQL */ \"(api)/./src/server/mySQL.js\");\n\n// Define a function to execute MySQL queries\nasync function executeQuery(query, values) {\n    const connection = await _server_mySQL__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n    try {\n        const [rows] = await connection.execute(query, values);\n        return rows;\n    } finally{\n        connection.release();\n    }\n}\n// Now you can use executeQuery to run MySQL queries\nconst getUsers = async ()=>{\n    const query = \"SELECT * FROM users\";\n    const users = await executeQuery(query);\n    return users;\n};\n// Define a function to insert a new user into the MySQL database\nasync function postUser(fname, date) {\n    const query = \"INSERT INTO users (user_id, name) VALUES (?, ?)\";\n    const values = [\n        date,\n        fname\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\nasync function deleteUserByFname(fname) {\n    const query = \"DELETE FROM users WHERE name = ?\"; // Assuming 'id' is the unique identifier for your records\n    const values = [\n        fname\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error;\n    }\n}\nasync function updateUser(fname, date) {\n    const query = \"UPDATE employee SET date = ? WHERE name = ?\";\n    const values = [\n        date,\n        fname\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error;\n    }\n}\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        // Handle GET request, e.g., fetch data from MySQL\n        const users = await getUsers();\n        res.status(200).json(users);\n    } else if (req.method === \"POST\") {\n        // Handle POST request, e.g., insert data into MySQL\n        const { date, fname } = req.body;\n        try {\n            await postUser(fname, date);\n            res.status(200).json({\n                message: \"Data inserted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error inserting data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"PUT\") {\n        const { date, fname } = req.body;\n        // Check if a record with the specified fname exists before attempting the update\n        const users = await getUsers(); // Assuming you have a function to fetch users from the database\n        const userToUpdate = users.find((user)=>user.name === fname);\n        if (!userToUpdate) {\n            // No matching record found, return a 404 response\n            res.status(404).json({\n                message: \"No name found in the database\"\n            });\n            return;\n        }\n        try {\n            await updateUser(fname, date);\n            res.status(200).json({\n                message: \"Data updated successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error updating data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"DELETE\") {\n        // Handle DELETE request, e.g., delete data from MySQL based on fname\n        const fnameToDelete = req.query.fname; // Assuming you're passing the fname as a query parameter\n        // Check if a record with the specified fname exists before attempting deletion\n        const users = await getUsers(); // Assuming you have a function to fetch users from the database\n        const userToDelete = users.find((user)=>user.name === fnameToDelete);\n        if (!userToDelete) {\n            // No matching record found, return an appropriate response\n            res.status(404).json({\n                message: \"No name found in the database\"\n            });\n            return;\n        }\n        try {\n            await deleteUserByFname(fnameToDelete);\n            res.status(200).json({\n                message: \"Data deleted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error deleting data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else {\n        res.status(405).json({\n            error: \"Method Not Allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Tyx5REFBeUQ7UUFFaEcsK0VBQStFO1FBQy9FLE1BQU1GLFFBQVEsTUFBTUQsWUFBWSxnRUFBZ0U7UUFDaEcsTUFBTXNCLGVBQWVyQixNQUFNaUIsS0FBSyxDQUFDQyxPQUFTQSxLQUFLQyxTQUFTQztRQUV4RCxJQUFJLENBQUNDLGNBQWM7WUFDakIsMkRBQTJEO1lBQzNEWixJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVFLFNBQVM7WUFBZ0M7WUFDaEU7UUFDRjtRQUVBLElBQUk7WUFDRixNQUFNVCxrQkFBa0JlO1lBQ3hCWCxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVFLFNBQVM7WUFBNEI7UUFDOUQsRUFBRSxPQUFPVixPQUFPO1lBQ2RXLFFBQVFYLE1BQU0sd0JBQXdCQTtZQUN0Q0ssSUFBSUUsT0FBTyxLQUFLQyxLQUFLO2dCQUFFUixPQUFPO1lBQXdCO1FBQ3hEO0lBQ0EsT0FDSztRQUNISyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7WUFBRVIsT0FBTztRQUFxQjtJQUNyRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZS1ib29raW5nLy4vc3JjL3BhZ2VzL2FwaS9oZWxsby5qcz83ZjgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb29sIGZyb20gJy4uLy4uL3NlcnZlci9teVNRTCdcblxuXG4vLyBEZWZpbmUgYSBmdW5jdGlvbiB0byBleGVjdXRlIE15U1FMIHF1ZXJpZXNcbmFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVRdWVyeShxdWVyeSwgdmFsdWVzKSB7XG4gIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBbcm93c10gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUocXVlcnksIHZhbHVlcyk7XG4gICAgcmV0dXJuIHJvd3M7XG4gIH0gZmluYWxseSB7XG4gICAgY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gIH1cbn1cblxuLy8gTm93IHlvdSBjYW4gdXNlIGV4ZWN1dGVRdWVyeSB0byBydW4gTXlTUUwgcXVlcmllc1xuY29uc3QgZ2V0VXNlcnMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHF1ZXJ5ID0gJ1NFTEVDVCAqIEZST00gdXNlcnMnO1xuICBjb25zdCB1c2VycyA9IGF3YWl0IGV4ZWN1dGVRdWVyeShxdWVyeSk7XG4gIHJldHVybiB1c2Vycztcbn07XG5cblxuLy8gRGVmaW5lIGEgZnVuY3Rpb24gdG8gaW5zZXJ0IGEgbmV3IHVzZXIgaW50byB0aGUgTXlTUUwgZGF0YWJhc2VcbmFzeW5jIGZ1bmN0aW9uIHBvc3RVc2VyKGZuYW1lLCBkYXRlKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gJ0lOU0VSVCBJTlRPIHVzZXJzICh1c2VyX2lkLCBuYW1lKSBWQUxVRVMgKD8sID8pJztcbiAgY29uc3QgdmFsdWVzID0gW2RhdGUsIGZuYW1lXTtcbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjdXRlUXVlcnkocXVlcnksIHZhbHVlcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7IC8vIFJldGhyb3cgdGhlIGVycm9yIHRvIGhhbmRsZSBpdCBpbiB0aGUgY2FsbGVyXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlVXNlckJ5Rm5hbWUoZm5hbWUpIHtcbiAgY29uc3QgcXVlcnkgPSAnREVMRVRFIEZST00gdXNlcnMgV0hFUkUgbmFtZSA9ID8nOyAvLyBBc3N1bWluZyAnaWQnIGlzIHRoZSB1bmlxdWUgaWRlbnRpZmllciBmb3IgeW91ciByZWNvcmRzXG4gIGNvbnN0IHZhbHVlcyA9IFtmbmFtZV07XG4gIFxuICB0cnkge1xuICAgIGF3YWl0IGV4ZWN1dGVRdWVyeShxdWVyeSwgdmFsdWVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVVc2VyKGZuYW1lLCBkYXRlKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gJ1VQREFURSBlbXBsb3llZSBTRVQgZGF0ZSA9ID8gV0hFUkUgbmFtZSA9ID8nO1xuICBjb25zdCB2YWx1ZXMgPSBbZGF0ZSwgZm5hbWVdO1xuICBcbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjdXRlUXVlcnkocXVlcnksdmFsdWVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcpIHtcbiAgICAvLyBIYW5kbGUgR0VUIHJlcXVlc3QsIGUuZy4sIGZldGNoIGRhdGEgZnJvbSBNeVNRTFxuICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgZ2V0VXNlcnMoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1c2Vycyk7XG4gIH1cblxuICBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAvLyBIYW5kbGUgUE9TVCByZXF1ZXN0LCBlLmcuLCBpbnNlcnQgZGF0YSBpbnRvIE15U1FMXG4gICAgY29uc3QgeyBkYXRlLCBmbmFtZSB9ID0gcmVxLmJvZHk7XG4gIFxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwb3N0VXNlcihmbmFtZSwgZGF0ZSk7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdEYXRhIGluc2VydGVkIHN1Y2Nlc3NmdWxseScgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluc2VydGluZyBkYXRhOicsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InIH0pO1xuICAgIH1cbiAgfVxuXG4gICBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnUFVUJykge1xuICAgIGNvbnN0IHsgZGF0ZSwgZm5hbWUgfSA9IHJlcS5ib2R5O1xuXG4gICAgLy8gQ2hlY2sgaWYgYSByZWNvcmQgd2l0aCB0aGUgc3BlY2lmaWVkIGZuYW1lIGV4aXN0cyBiZWZvcmUgYXR0ZW1wdGluZyB0aGUgdXBkYXRlXG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCBnZXRVc2VycygpOyAvLyBBc3N1bWluZyB5b3UgaGF2ZSBhIGZ1bmN0aW9uIHRvIGZldGNoIHVzZXJzIGZyb20gdGhlIGRhdGFiYXNlXG4gICAgY29uc3QgdXNlclRvVXBkYXRlID0gdXNlcnMuZmluZCgodXNlcikgPT4gdXNlci5uYW1lID09PSBmbmFtZSk7XG4gIFxuICAgIGlmICghdXNlclRvVXBkYXRlKSB7XG4gICAgICAvLyBObyBtYXRjaGluZyByZWNvcmQgZm91bmQsIHJldHVybiBhIDQwNCByZXNwb25zZVxuICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnTm8gbmFtZSBmb3VuZCBpbiB0aGUgZGF0YWJhc2UnIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHVwZGF0ZVVzZXIoZm5hbWUsIGRhdGUpO1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnRGF0YSB1cGRhdGVkIHN1Y2Nlc3NmdWxseScgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwZGF0aW5nIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XG4gICAgfVxuICB9XG5cbiAgIGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdERUxFVEUnKSB7XG4gICAgICAvLyBIYW5kbGUgREVMRVRFIHJlcXVlc3QsIGUuZy4sIGRlbGV0ZSBkYXRhIGZyb20gTXlTUUwgYmFzZWQgb24gZm5hbWVcbiAgY29uc3QgZm5hbWVUb0RlbGV0ZSA9IHJlcS5xdWVyeS5mbmFtZTsgLy8gQXNzdW1pbmcgeW91J3JlIHBhc3NpbmcgdGhlIGZuYW1lIGFzIGEgcXVlcnkgcGFyYW1ldGVyXG5cbiAgLy8gQ2hlY2sgaWYgYSByZWNvcmQgd2l0aCB0aGUgc3BlY2lmaWVkIGZuYW1lIGV4aXN0cyBiZWZvcmUgYXR0ZW1wdGluZyBkZWxldGlvblxuICBjb25zdCB1c2VycyA9IGF3YWl0IGdldFVzZXJzKCk7IC8vIEFzc3VtaW5nIHlvdSBoYXZlIGEgZnVuY3Rpb24gdG8gZmV0Y2ggdXNlcnMgZnJvbSB0aGUgZGF0YWJhc2VcbiAgY29uc3QgdXNlclRvRGVsZXRlID0gdXNlcnMuZmluZCgodXNlcikgPT4gdXNlci5uYW1lID09PSBmbmFtZVRvRGVsZXRlKTtcblxuICBpZiAoIXVzZXJUb0RlbGV0ZSkge1xuICAgIC8vIE5vIG1hdGNoaW5nIHJlY29yZCBmb3VuZCwgcmV0dXJuIGFuIGFwcHJvcHJpYXRlIHJlc3BvbnNlXG4gICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnTm8gbmFtZSBmb3VuZCBpbiB0aGUgZGF0YWJhc2UnIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRyeSB7XG4gICAgYXdhaXQgZGVsZXRlVXNlckJ5Rm5hbWUoZm5hbWVUb0RlbGV0ZSk7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnRGF0YSBkZWxldGVkIHN1Y2Nlc3NmdWxseScgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgZGF0YTonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XG4gIH1cbiAgfSBcbiAgZWxzZSB7XG4gICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBOb3QgQWxsb3dlZCcgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsicG9vbCIsImV4ZWN1dGVRdWVyeSIsInF1ZXJ5IiwidmFsdWVzIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJyb3dzIiwiZXhlY3V0ZSIsInJlbGVhc2UiLCJnZXRVc2VycyIsInVzZXJzIiwicG9zdFVzZXIiLCJmbmFtZSIsImRhdGUiLCJlcnJvciIsImRlbGV0ZVVzZXJCeUZuYW1lIiwidXBkYXRlVXNlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiYm9keSIsIm1lc3NhZ2UiLCJjb25zb2xlIiwidXNlclRvVXBkYXRlIiwiZmluZCIsInVzZXIiLCJuYW1lIiwiZm5hbWVUb0RlbGV0ZSIsInVzZXJUb0RlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/hello.js\n");

/***/ }),

/***/ "(api)/./src/server/mySQL.js":
/*!*****************************!*\
  !*** ./src/server/mySQL.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\n// Create a MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"\",\n    database: \"Test_Booking\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL215U1FMLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtQztBQUVuQyxpQ0FBaUM7QUFDakMsTUFBTUMsT0FBT0QsZ0VBQWdCRSxDQUFDO0lBQzVCQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLG9CQUFvQjtJQUNwQkMsaUJBQWlCO0lBQ2pCQyxZQUFZO0FBQ2Q7QUFFQSxpRUFBZVIsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2UtYm9va2luZy8uL3NyYy9zZXJ2ZXIvbXlTUUwuanM/YTRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwyL3Byb21pc2UnO1xuXG4vLyBDcmVhdGUgYSBNeVNRTCBjb25uZWN0aW9uIHBvb2xcbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIHVzZXI6ICdyb290JyxcbiAgcGFzc3dvcmQ6ICcnLFxuICBkYXRhYmFzZTogJ1Rlc3RfQm9va2luZycsXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcbiAgcXVldWVMaW1pdDogMCxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBwb29sOyJdLCJuYW1lcyI6WyJteXNxbCIsInBvb2wiLCJjcmVhdGVQb29sIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwid2FpdEZvckNvbm5lY3Rpb25zIiwiY29ubmVjdGlvbkxpbWl0IiwicXVldWVMaW1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/mySQL.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/hello.js"));
module.exports = __webpack_exports__;

})();