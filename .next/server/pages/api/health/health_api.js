"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/health/health_api";
exports.ids = ["pages/api/health/health_api"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "(api)/./src/pages/api/health/health_api.js":
/*!********************************************!*\
  !*** ./src/pages/api/health/health_api.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ health)\n/* harmony export */ });\n/* harmony import */ var _server_mySQL__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../server/mySQL */ \"(api)/./src/server/mySQL.js\");\n\n// Define a function to execute MySQL queries\nasync function executeQuery(query, values) {\n    const connection = await _server_mySQL__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n    try {\n        const [rows] = await connection.execute(query, values);\n        return rows;\n    } finally{\n        connection.release();\n    }\n}\n// Define a function to insert a new user into the MySQL database\nasync function postUser(health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail) {\n    const query = \"INSERT INTO health_care (health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail) VALUES (?, ?,?,?,?,?,?,?,?,?,?,?)\";\n    const values = [\n        health_id,\n        user_id,\n        name,\n        doctor_type,\n        phone_num,\n        time_selected,\n        date_selected,\n        plant,\n        checkInTime,\n        picked_what,\n        checkIn,\n        more_detail\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\n// Now you can use executeQuery to run MySQL queries\nconst getHealth = async ()=>{\n    const query = \"SELECT * FROM health_care\";\n    const health = await executeQuery(query);\n    return health;\n};\nasync function updatedHealth(phone_num, more_detail, health_id, company) {\n    const query = \"UPDATE health_care SET phone_num = ?,more_detail = ?,company = ? WHERE health_id = ?\";\n    const values = [\n        phone_num,\n        more_detail,\n        company,\n        health_id\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\nasync function deleteHealthCare(health_id) {\n    const query = \"DELETE FROM health_care WHERE health_id = ?\";\n    const values = [\n        health_id\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\nasync function health(req, res) {\n    if (req.method === \"GET\") {\n        // Handle GET request, e.g., fetch data from MySQL\n        const health = await getHealth();\n        res.status(200).json(health);\n    } else if (req.method === \"POST\") {\n        // Handle POST request, e.g., insert data into MySQL\n        const { health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail } = req.body;\n        try {\n            await postUser(health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail);\n            res.status(200).json({\n                message: \"Data inserted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error inserting data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"PUT\") {\n        // Handle PUT request, e.g., update data in MySQL\n        const { phone_num, more_detail, health_id, company } = req.body; // Assuming you receive healthId and whoPickedThis in the request body\n        try {\n            await updatedHealth(phone_num, more_detail, health_id, company);\n            res.status(200).json({\n                message: \"Data updated successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error updating data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"DELETE\") {\n        const health_id = req.query.healthId;\n        try {\n            await deleteHealthCare(health_id);\n            res.status(200).json({\n                message: \"Data deleted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error deleting data:\", error);\n            res.status(500).json({\n                error: `Internal Server Error`\n            });\n        }\n    } else {\n        res.status(405).json({\n            message: \"This method is not allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2hlYWx0aC9oZWFsdGhfYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBRXpDLDZDQUE2QztBQUM3QyxlQUFlQyxhQUFhQyxLQUFLLEVBQUVDLE1BQU07SUFDdkMsTUFBTUMsYUFBYSxNQUFNSixtRUFBa0JLO0lBQzNDLElBQUk7UUFDRixNQUFNLENBQUNDLEtBQUssR0FBRyxNQUFNRixXQUFXRyxRQUFRTCxPQUFPQztRQUMvQyxPQUFPRztJQUNULFNBQVU7UUFDUkYsV0FBV0k7SUFDYjtBQUNGO0FBRUEsaUVBQWlFO0FBQ2pFLGVBQWVDLFNBQ2JDLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsU0FBUyxFQUNUQyxhQUFhLEVBQ2JDLGFBQWEsRUFDYkMsS0FBSyxFQUNMQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsT0FBTyxFQUNQQyxXQUFXO0lBRVgsTUFBTW5CLFFBQ0o7SUFDRixNQUFNQyxTQUFTO1FBQ2JPO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO0tBQ0Q7SUFDRCxJQUFJO1FBQ0YsTUFBTXBCLGFBQWFDLE9BQU9DO0lBQzVCLEVBQUUsT0FBT21CLE9BQU87UUFDZCxNQUFNQSxPQUFPLCtDQUErQztJQUM5RDtBQUNGO0FBQ0Esb0RBQW9EO0FBQ3BELE1BQU1DLFlBQVk7SUFDaEIsTUFBTXJCLFFBQVE7SUFDZCxNQUFNc0IsU0FBUyxNQUFNdkIsYUFBYUM7SUFDbEMsT0FBT3NCO0FBQ1Q7QUFFQSxlQUFlQyxjQUFjWCxTQUFTLEVBQUVPLFdBQVcsRUFBRVgsU0FBUyxFQUFDZ0IsT0FBTztJQUNwRSxNQUFNeEIsUUFDSjtJQUNBLE1BQU1DLFNBQVM7UUFBQ1c7UUFBV087UUFBYUs7UUFBU2hCO0tBQVU7SUFFN0QsSUFBSTtRQUNGLE1BQU1ULGFBQWFDLE9BQU9DO0lBQzVCLEVBQUUsT0FBT21CLE9BQU87UUFDZCxNQUFNQSxPQUFPLCtDQUErQztJQUM5RDtBQUNGO0FBRUEsZUFBZUssaUJBQWlCakIsU0FBUztJQUN2QyxNQUFNUixRQUNKO0lBQ0YsTUFBTUMsU0FBUztRQUFDTztLQUFVO0lBRTFCLElBQUk7UUFDRixNQUFNVCxhQUFhQyxPQUFPQztJQUM1QixFQUFFLE9BQU9tQixPQUFPO1FBQ2QsTUFBTUEsT0FBTywrQ0FBK0M7SUFDOUQ7QUFDRjtBQUVlLGVBQWVFLE9BQU9JLEdBQUcsRUFBRUMsR0FBRztJQUMzQyxJQUFJRCxJQUFJRSxXQUFXLE9BQU87UUFDeEIsa0RBQWtEO1FBQ2xELE1BQU1OLFNBQVMsTUFBTUQ7UUFDckJNLElBQUlFLE9BQU8sS0FBS0MsS0FBS1I7SUFDdkIsT0FBTyxJQUFJSSxJQUFJRSxXQUFXLFFBQVE7UUFDaEMsb0RBQW9EO1FBQ3BELE1BQU0sRUFDSnBCLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsU0FBUyxFQUNUQyxhQUFhLEVBQ2JDLGFBQWEsRUFDYkMsS0FBSyxFQUNMQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsT0FBTyxFQUNQQyxXQUFXLEVBQ1osR0FBR08sSUFBSUs7UUFFUixJQUFJO1lBQ0YsTUFBTXhCLFNBQ0pDLFdBQ0FDLFNBQ0FDLE1BQ0FDLGFBQ0FDLFdBQ0FDLGVBQ0FDLGVBQ0FDLE9BQ0FDLGFBQ0FDLGFBQ0FDLFNBQ0FDO1lBRUZRLElBQUlFLE9BQU8sS0FBS0MsS0FBSztnQkFBRUUsU0FBUztZQUE2QjtRQUMvRCxFQUFFLE9BQU9aLE9BQU87WUFDZGEsUUFBUWIsTUFBTSx5QkFBeUJBO1lBQ3ZDTyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVWLE9BQU87WUFBd0I7UUFDeEQ7SUFDRixPQUFPLElBQUlNLElBQUlFLFdBQVcsT0FBTztRQUMvQixpREFBaUQ7UUFDakQsTUFBTSxFQUFFaEIsU0FBUyxFQUFFTyxXQUFXLEVBQUVYLFNBQVMsRUFBQ2dCLE9BQU8sRUFBRSxHQUFHRSxJQUFJSyxNQUFNLHNFQUFzRTtRQUN0SSxJQUFJO1lBQ0YsTUFBTVIsY0FBY1gsV0FBV08sYUFBYVgsV0FBVWdCO1lBQ3RERyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVFLFNBQVM7WUFBNEI7UUFDOUQsRUFBRSxPQUFPWixPQUFPO1lBQ2RhLFFBQVFiLE1BQU0sd0JBQXdCQTtZQUN0Q08sSUFBSUUsT0FBTyxLQUFLQyxLQUFLO2dCQUFFVixPQUFPO1lBQXdCO1FBQ3hEO0lBQ0YsT0FDSyxJQUFJTSxJQUFJRSxXQUFXLFVBQVU7UUFDaEMsTUFBT3BCLFlBQWFrQixJQUFJMUIsTUFBTWtDO1FBQzlCLElBQUk7WUFDRixNQUFNVCxpQkFBaUJqQjtZQUN2Qm1CLElBQUlFLE9BQU8sS0FBS0MsS0FBSztnQkFBRUUsU0FBUztZQUE0QjtRQUM5RCxFQUFFLE9BQU9aLE9BQU87WUFDZGEsUUFBUWIsTUFBTSx3QkFBd0JBO1lBQ3RDTyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVWLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztZQUFDO1FBQ3hEO0lBQ0YsT0FDSztRQUNITyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7WUFBRUUsU0FBUztRQUE2QjtJQUMvRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZS1ib29raW5nLy4vc3JjL3BhZ2VzL2FwaS9oZWFsdGgvaGVhbHRoX2FwaS5qcz8zNDRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb29sIGZyb20gXCIuLi8uLi8uLi9zZXJ2ZXIvbXlTUUxcIjtcblxuLy8gRGVmaW5lIGEgZnVuY3Rpb24gdG8gZXhlY3V0ZSBNeVNRTCBxdWVyaWVzXG5hc3luYyBmdW5jdGlvbiBleGVjdXRlUXVlcnkocXVlcnksIHZhbHVlcykge1xuICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gIHRyeSB7XG4gICAgY29uc3QgW3Jvd3NdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHF1ZXJ5LCB2YWx1ZXMpO1xuICAgIHJldHVybiByb3dzO1xuICB9IGZpbmFsbHkge1xuICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICB9XG59XG5cbi8vIERlZmluZSBhIGZ1bmN0aW9uIHRvIGluc2VydCBhIG5ldyB1c2VyIGludG8gdGhlIE15U1FMIGRhdGFiYXNlXG5hc3luYyBmdW5jdGlvbiBwb3N0VXNlcihcbiAgaGVhbHRoX2lkLFxuICB1c2VyX2lkLFxuICBuYW1lLFxuICBkb2N0b3JfdHlwZSxcbiAgcGhvbmVfbnVtLFxuICB0aW1lX3NlbGVjdGVkLFxuICBkYXRlX3NlbGVjdGVkLFxuICBwbGFudCxcbiAgY2hlY2tJblRpbWUsXG4gIHBpY2tlZF93aGF0LFxuICBjaGVja0luLFxuICBtb3JlX2RldGFpbFxuKSB7XG4gIGNvbnN0IHF1ZXJ5ID1cbiAgICBcIklOU0VSVCBJTlRPIGhlYWx0aF9jYXJlIChoZWFsdGhfaWQsIHVzZXJfaWQsIG5hbWUsIGRvY3Rvcl90eXBlLCBwaG9uZV9udW0sIHRpbWVfc2VsZWN0ZWQsIGRhdGVfc2VsZWN0ZWQsIHBsYW50LCBjaGVja0luVGltZSwgcGlja2VkX3doYXQsIGNoZWNrSW4sIG1vcmVfZGV0YWlsKSBWQUxVRVMgKD8sID8sPyw/LD8sPyw/LD8sPyw/LD8sPylcIjtcbiAgY29uc3QgdmFsdWVzID0gW1xuICAgIGhlYWx0aF9pZCxcbiAgICB1c2VyX2lkLFxuICAgIG5hbWUsXG4gICAgZG9jdG9yX3R5cGUsXG4gICAgcGhvbmVfbnVtLFxuICAgIHRpbWVfc2VsZWN0ZWQsXG4gICAgZGF0ZV9zZWxlY3RlZCxcbiAgICBwbGFudCxcbiAgICBjaGVja0luVGltZSxcbiAgICBwaWNrZWRfd2hhdCxcbiAgICBjaGVja0luLFxuICAgIG1vcmVfZGV0YWlsLFxuICBdO1xuICB0cnkge1xuICAgIGF3YWl0IGV4ZWN1dGVRdWVyeShxdWVyeSwgdmFsdWVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjsgLy8gUmV0aHJvdyB0aGUgZXJyb3IgdG8gaGFuZGxlIGl0IGluIHRoZSBjYWxsZXJcbiAgfVxufVxuLy8gTm93IHlvdSBjYW4gdXNlIGV4ZWN1dGVRdWVyeSB0byBydW4gTXlTUUwgcXVlcmllc1xuY29uc3QgZ2V0SGVhbHRoID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBxdWVyeSA9IFwiU0VMRUNUICogRlJPTSBoZWFsdGhfY2FyZVwiO1xuICBjb25zdCBoZWFsdGggPSBhd2FpdCBleGVjdXRlUXVlcnkocXVlcnkpO1xuICByZXR1cm4gaGVhbHRoO1xufTtcblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlZEhlYWx0aChwaG9uZV9udW0sIG1vcmVfZGV0YWlsLCBoZWFsdGhfaWQsY29tcGFueSkge1xuICBjb25zdCBxdWVyeSA9XG4gICAgXCJVUERBVEUgaGVhbHRoX2NhcmUgU0VUIHBob25lX251bSA9ID8sbW9yZV9kZXRhaWwgPSA/LGNvbXBhbnkgPSA/IFdIRVJFIGhlYWx0aF9pZCA9ID9cIjtcbiAgICBjb25zdCB2YWx1ZXMgPSBbcGhvbmVfbnVtLCBtb3JlX2RldGFpbCwgY29tcGFueSwgaGVhbHRoX2lkXVxuXG4gIHRyeSB7XG4gICAgYXdhaXQgZXhlY3V0ZVF1ZXJ5KHF1ZXJ5LCB2YWx1ZXMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IGVycm9yOyAvLyBSZXRocm93IHRoZSBlcnJvciB0byBoYW5kbGUgaXQgaW4gdGhlIGNhbGxlclxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUhlYWx0aENhcmUoaGVhbHRoX2lkKSB7XG4gIGNvbnN0IHF1ZXJ5ID1cbiAgICBcIkRFTEVURSBGUk9NIGhlYWx0aF9jYXJlIFdIRVJFIGhlYWx0aF9pZCA9ID9cIjtcbiAgY29uc3QgdmFsdWVzID0gW2hlYWx0aF9pZF07XG5cbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjdXRlUXVlcnkocXVlcnksIHZhbHVlcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7IC8vIFJldGhyb3cgdGhlIGVycm9yIHRvIGhhbmRsZSBpdCBpbiB0aGUgY2FsbGVyXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGVhbHRoKHJlcSwgcmVzKSB7XG4gIGlmIChyZXEubWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgLy8gSGFuZGxlIEdFVCByZXF1ZXN0LCBlLmcuLCBmZXRjaCBkYXRhIGZyb20gTXlTUUxcbiAgICBjb25zdCBoZWFsdGggPSBhd2FpdCBnZXRIZWFsdGgoKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihoZWFsdGgpO1xuICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09IFwiUE9TVFwiKSB7XG4gICAgLy8gSGFuZGxlIFBPU1QgcmVxdWVzdCwgZS5nLiwgaW5zZXJ0IGRhdGEgaW50byBNeVNRTFxuICAgIGNvbnN0IHtcbiAgICAgIGhlYWx0aF9pZCxcbiAgICAgIHVzZXJfaWQsXG4gICAgICBuYW1lLFxuICAgICAgZG9jdG9yX3R5cGUsXG4gICAgICBwaG9uZV9udW0sXG4gICAgICB0aW1lX3NlbGVjdGVkLFxuICAgICAgZGF0ZV9zZWxlY3RlZCxcbiAgICAgIHBsYW50LFxuICAgICAgY2hlY2tJblRpbWUsXG4gICAgICBwaWNrZWRfd2hhdCxcbiAgICAgIGNoZWNrSW4sXG4gICAgICBtb3JlX2RldGFpbCxcbiAgICB9ID0gcmVxLmJvZHk7XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgcG9zdFVzZXIoXG4gICAgICAgIGhlYWx0aF9pZCxcbiAgICAgICAgdXNlcl9pZCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZG9jdG9yX3R5cGUsXG4gICAgICAgIHBob25lX251bSxcbiAgICAgICAgdGltZV9zZWxlY3RlZCxcbiAgICAgICAgZGF0ZV9zZWxlY3RlZCxcbiAgICAgICAgcGxhbnQsXG4gICAgICAgIGNoZWNrSW5UaW1lLFxuICAgICAgICBwaWNrZWRfd2hhdCxcbiAgICAgICAgY2hlY2tJbixcbiAgICAgICAgbW9yZV9kZXRhaWxcbiAgICAgICk7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6IFwiRGF0YSBpbnNlcnRlZCBzdWNjZXNzZnVsbHlcIiB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGluc2VydGluZyBkYXRhOlwiLCBlcnJvcik7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBcIkludGVybmFsIFNlcnZlciBFcnJvclwiIH0pO1xuICAgIH1cbiAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSBcIlBVVFwiKSB7XG4gICAgLy8gSGFuZGxlIFBVVCByZXF1ZXN0LCBlLmcuLCB1cGRhdGUgZGF0YSBpbiBNeVNRTFxuICAgIGNvbnN0IHsgcGhvbmVfbnVtLCBtb3JlX2RldGFpbCwgaGVhbHRoX2lkLGNvbXBhbnkgfSA9IHJlcS5ib2R5OyAvLyBBc3N1bWluZyB5b3UgcmVjZWl2ZSBoZWFsdGhJZCBhbmQgd2hvUGlja2VkVGhpcyBpbiB0aGUgcmVxdWVzdCBib2R5XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHVwZGF0ZWRIZWFsdGgocGhvbmVfbnVtLCBtb3JlX2RldGFpbCwgaGVhbHRoX2lkLGNvbXBhbnkpO1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiBcIkRhdGEgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIiB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIGRhdGE6XCIsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCIgfSk7XG4gICAgfVxuICB9XG4gIGVsc2UgaWYgKHJlcS5tZXRob2QgPT09IFwiREVMRVRFXCIpIHtcbiAgICBjb25zdCAgaGVhbHRoX2lkICA9IHJlcS5xdWVyeS5oZWFsdGhJZDtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZGVsZXRlSGVhbHRoQ2FyZShoZWFsdGhfaWQpXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6IFwiRGF0YSBkZWxldGVkIHN1Y2Nlc3NmdWxseVwiIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGVsZXRpbmcgZGF0YTpcIiwgZXJyb3IpO1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogYEludGVybmFsIFNlcnZlciBFcnJvcmAgfSk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogXCJUaGlzIG1ldGhvZCBpcyBub3QgYWxsb3dlZFwiIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsicG9vbCIsImV4ZWN1dGVRdWVyeSIsInF1ZXJ5IiwidmFsdWVzIiwiY29ubmVjdGlvbiIsImdldENvbm5lY3Rpb24iLCJyb3dzIiwiZXhlY3V0ZSIsInJlbGVhc2UiLCJwb3N0VXNlciIsImhlYWx0aF9pZCIsInVzZXJfaWQiLCJuYW1lIiwiZG9jdG9yX3R5cGUiLCJwaG9uZV9udW0iLCJ0aW1lX3NlbGVjdGVkIiwiZGF0ZV9zZWxlY3RlZCIsInBsYW50IiwiY2hlY2tJblRpbWUiLCJwaWNrZWRfd2hhdCIsImNoZWNrSW4iLCJtb3JlX2RldGFpbCIsImVycm9yIiwiZ2V0SGVhbHRoIiwiaGVhbHRoIiwidXBkYXRlZEhlYWx0aCIsImNvbXBhbnkiLCJkZWxldGVIZWFsdGhDYXJlIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsImJvZHkiLCJtZXNzYWdlIiwiY29uc29sZSIsImhlYWx0aElkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/health/health_api.js\n");

/***/ }),

/***/ "(api)/./src/server/mySQL.js":
/*!*****************************!*\
  !*** ./src/server/mySQL.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\n// Create a MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"\",\n    database: \"Test_Booking\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL215U1FMLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtQztBQUVuQyxpQ0FBaUM7QUFDakMsTUFBTUMsT0FBT0QsZ0VBQWdCRSxDQUFDO0lBQzVCQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLG9CQUFvQjtJQUNwQkMsaUJBQWlCO0lBQ2pCQyxZQUFZO0FBQ2Q7QUFFQSxpRUFBZVIsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2UtYm9va2luZy8uL3NyYy9zZXJ2ZXIvbXlTUUwuanM/YTRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwyL3Byb21pc2UnO1xuXG4vLyBDcmVhdGUgYSBNeVNRTCBjb25uZWN0aW9uIHBvb2xcbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIHVzZXI6ICdyb290JyxcbiAgcGFzc3dvcmQ6ICcnLFxuICBkYXRhYmFzZTogJ1Rlc3RfQm9va2luZycsXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcbiAgcXVldWVMaW1pdDogMCxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBwb29sOyJdLCJuYW1lcyI6WyJteXNxbCIsInBvb2wiLCJjcmVhdGVQb29sIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwid2FpdEZvckNvbm5lY3Rpb25zIiwiY29ubmVjdGlvbkxpbWl0IiwicXVldWVMaW1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/mySQL.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/health/health_api.js"));
module.exports = __webpack_exports__;

})();