"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/health/health_api";
exports.ids = ["pages/api/health/health_api"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "(api)/./src/pages/api/health/health_api.js":
/*!********************************************!*\
  !*** ./src/pages/api/health/health_api.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ health)\n/* harmony export */ });\n/* harmony import */ var _server_mySQL__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../server/mySQL */ \"(api)/./src/server/mySQL.js\");\n\n// Define a function to execute MySQL queries\nasync function executeQuery(query, values) {\n    const connection = await _server_mySQL__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getConnection();\n    try {\n        const [rows] = await connection.execute(query, values);\n        return rows;\n    } finally{\n        connection.release();\n    }\n}\n// Define a function to insert a new user into the MySQL database\nasync function postUser(health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail, company) {\n    const query = \"INSERT INTO health_care (health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail,company) VALUES (?, ?,?,?,?,?,?,?,?,?,?,?,?)\";\n    const values = [\n        health_id,\n        user_id,\n        name,\n        doctor_type,\n        phone_num,\n        time_selected,\n        date_selected,\n        plant,\n        checkInTime,\n        picked_what,\n        checkIn,\n        more_detail,\n        company\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\n// Now you can use executeQuery to run MySQL queries\nconst getHealth = async ()=>{\n    const query = \"SELECT * FROM health_care\";\n    const health = await executeQuery(query);\n    return health;\n};\nasync function updatedHealth(phone_num, more_detail, health_id, company) {\n    const query = \"UPDATE health_care SET phone_num = ?,more_detail = ?,company = ? WHERE health_id = ?\";\n    const values = [\n        phone_num,\n        more_detail,\n        company,\n        health_id\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\nasync function deleteHealthCare(health_id) {\n    const query = \"DELETE FROM health_care WHERE health_id = ?\";\n    const values = [\n        health_id\n    ];\n    try {\n        await executeQuery(query, values);\n    } catch (error) {\n        throw error; // Rethrow the error to handle it in the caller\n    }\n}\nasync function health(req, res) {\n    if (req.method === \"GET\") {\n        // Handle GET request, e.g., fetch data from MySQL\n        const health = await getHealth();\n        res.status(200).json(health);\n    } else if (req.method === \"POST\") {\n        // Handle POST request, e.g., insert data into MySQL\n        const { health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail, company } = req.body;\n        try {\n            await postUser(health_id, user_id, name, doctor_type, phone_num, time_selected, date_selected, plant, checkInTime, picked_what, checkIn, more_detail, company);\n            res.status(200).json({\n                message: \"Data inserted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error inserting data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"PUT\") {\n        // Handle PUT request, e.g., update data in MySQL\n        const { phone_num, more_detail, health_id, company } = req.body; // Assuming you receive healthId and whoPickedThis in the request body\n        try {\n            await updatedHealth(phone_num, more_detail, health_id, company);\n            res.status(200).json({\n                message: \"Data updated successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error updating data:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\"\n            });\n        }\n    } else if (req.method === \"DELETE\") {\n        const health_id = req.query.healthId;\n        try {\n            await deleteHealthCare(health_id);\n            res.status(200).json({\n                message: \"Data deleted successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error deleting data:\", error);\n            res.status(500).json({\n                error: `Internal Server Error`\n            });\n        }\n    } else {\n        res.status(405).json({\n            message: \"This method is not allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2hlYWx0aC9oZWFsdGhfYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBRXpDLDZDQUE2QztBQUM3QyxlQUFlQyxhQUFhQyxLQUFLLEVBQUVDLE1BQU07SUFDdkMsTUFBTUMsYUFBYSxNQUFNSixtRUFBa0JLO0lBQzNDLElBQUk7UUFDRixNQUFNLENBQUNDLEtBQUssR0FBRyxNQUFNRixXQUFXRyxRQUFRTCxPQUFPQztRQUMvQyxPQUFPRztJQUNULFNBQVU7UUFDUkYsV0FBV0k7SUFDYjtBQUNGO0FBRUEsaUVBQWlFO0FBQ2pFLGVBQWVDLFNBQ2JDLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsU0FBUyxFQUNUQyxhQUFhLEVBQ2JDLGFBQWEsRUFDYkMsS0FBSyxFQUNMQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsT0FBTyxFQUNQQyxXQUFXLEVBQ1hDLE9BQU87SUFFUCxNQUFNcEIsUUFDSjtJQUNGLE1BQU1DLFNBQVM7UUFDYk87UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7S0FDRDtJQUNELElBQUk7UUFDRixNQUFNckIsYUFBYUMsT0FBT0M7SUFDNUIsRUFBRSxPQUFPb0IsT0FBTztRQUNkLE1BQU1BLE9BQU8sK0NBQStDO0lBQzlEO0FBQ0Y7QUFDQSxvREFBb0Q7QUFDcEQsTUFBTUMsWUFBWTtJQUNoQixNQUFNdEIsUUFBUTtJQUNkLE1BQU11QixTQUFTLE1BQU14QixhQUFhQztJQUNsQyxPQUFPdUI7QUFDVDtBQUVBLGVBQWVDLGNBQWNaLFNBQVMsRUFBRU8sV0FBVyxFQUFFWCxTQUFTLEVBQUNZLE9BQU87SUFDcEUsTUFBTXBCLFFBQ0o7SUFDQSxNQUFNQyxTQUFTO1FBQUNXO1FBQVdPO1FBQWFDO1FBQVNaO0tBQVU7SUFFN0QsSUFBSTtRQUNGLE1BQU1ULGFBQWFDLE9BQU9DO0lBQzVCLEVBQUUsT0FBT29CLE9BQU87UUFDZCxNQUFNQSxPQUFPLCtDQUErQztJQUM5RDtBQUNGO0FBRUEsZUFBZUksaUJBQWlCakIsU0FBUztJQUN2QyxNQUFNUixRQUNKO0lBQ0YsTUFBTUMsU0FBUztRQUFDTztLQUFVO0lBRTFCLElBQUk7UUFDRixNQUFNVCxhQUFhQyxPQUFPQztJQUM1QixFQUFFLE9BQU9vQixPQUFPO1FBQ2QsTUFBTUEsT0FBTywrQ0FBK0M7SUFDOUQ7QUFDRjtBQUVlLGVBQWVFLE9BQU9HLEdBQUcsRUFBRUMsR0FBRztJQUMzQyxJQUFJRCxJQUFJRSxXQUFXLE9BQU87UUFDeEIsa0RBQWtEO1FBQ2xELE1BQU1MLFNBQVMsTUFBTUQ7UUFDckJLLElBQUlFLE9BQU8sS0FBS0MsS0FBS1A7SUFDdkIsT0FBTyxJQUFJRyxJQUFJRSxXQUFXLFFBQVE7UUFDaEMsb0RBQW9EO1FBQ3BELE1BQU0sRUFDSnBCLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsU0FBUyxFQUNUQyxhQUFhLEVBQ2JDLGFBQWEsRUFDYkMsS0FBSyxFQUNMQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsT0FBTyxFQUNQQyxXQUFXLEVBQ1hDLE9BQU8sRUFDUixHQUFHTSxJQUFJSztRQUVSLElBQUk7WUFDRixNQUFNeEIsU0FDSkMsV0FDQUMsU0FDQUMsTUFDQUMsYUFDQUMsV0FDQUMsZUFDQUMsZUFDQUMsT0FDQUMsYUFDQUMsYUFDQUMsU0FDQUMsYUFDQUM7WUFFRk8sSUFBSUUsT0FBTyxLQUFLQyxLQUFLO2dCQUFFRSxTQUFTO1lBQTZCO1FBQy9ELEVBQUUsT0FBT1gsT0FBTztZQUNkWSxRQUFRWixNQUFNLHlCQUF5QkE7WUFDdkNNLElBQUlFLE9BQU8sS0FBS0MsS0FBSztnQkFBRVQsT0FBTztZQUF3QjtRQUN4RDtJQUNGLE9BQU8sSUFBSUssSUFBSUUsV0FBVyxPQUFPO1FBQy9CLGlEQUFpRDtRQUNqRCxNQUFNLEVBQUVoQixTQUFTLEVBQUVPLFdBQVcsRUFBRVgsU0FBUyxFQUFDWSxPQUFPLEVBQUUsR0FBR00sSUFBSUssTUFBTSxzRUFBc0U7UUFDdEksSUFBSTtZQUNGLE1BQU1QLGNBQWNaLFdBQVdPLGFBQWFYLFdBQVVZO1lBQ3RETyxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVFLFNBQVM7WUFBNEI7UUFDOUQsRUFBRSxPQUFPWCxPQUFPO1lBQ2RZLFFBQVFaLE1BQU0sd0JBQXdCQTtZQUN0Q00sSUFBSUUsT0FBTyxLQUFLQyxLQUFLO2dCQUFFVCxPQUFPO1lBQXdCO1FBQ3hEO0lBQ0YsT0FDSyxJQUFJSyxJQUFJRSxXQUFXLFVBQVU7UUFDaEMsTUFBT3BCLFlBQWFrQixJQUFJMUIsTUFBTWtDO1FBQzlCLElBQUk7WUFDRixNQUFNVCxpQkFBaUJqQjtZQUN2Qm1CLElBQUlFLE9BQU8sS0FBS0MsS0FBSztnQkFBRUUsU0FBUztZQUE0QjtRQUM5RCxFQUFFLE9BQU9YLE9BQU87WUFDZFksUUFBUVosTUFBTSx3QkFBd0JBO1lBQ3RDTSxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7Z0JBQUVULE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztZQUFDO1FBQ3hEO0lBQ0YsT0FDSztRQUNITSxJQUFJRSxPQUFPLEtBQUtDLEtBQUs7WUFBRUUsU0FBUztRQUE2QjtJQUMvRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZS1ib29raW5nLy4vc3JjL3BhZ2VzL2FwaS9oZWFsdGgvaGVhbHRoX2FwaS5qcz8zNDRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb29sIGZyb20gXCIuLi8uLi8uLi9zZXJ2ZXIvbXlTUUxcIjtcblxuLy8gRGVmaW5lIGEgZnVuY3Rpb24gdG8gZXhlY3V0ZSBNeVNRTCBxdWVyaWVzXG5hc3luYyBmdW5jdGlvbiBleGVjdXRlUXVlcnkocXVlcnksIHZhbHVlcykge1xuICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gIHRyeSB7XG4gICAgY29uc3QgW3Jvd3NdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHF1ZXJ5LCB2YWx1ZXMpO1xuICAgIHJldHVybiByb3dzO1xuICB9IGZpbmFsbHkge1xuICAgIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICB9XG59XG5cbi8vIERlZmluZSBhIGZ1bmN0aW9uIHRvIGluc2VydCBhIG5ldyB1c2VyIGludG8gdGhlIE15U1FMIGRhdGFiYXNlXG5hc3luYyBmdW5jdGlvbiBwb3N0VXNlcihcbiAgaGVhbHRoX2lkLFxuICB1c2VyX2lkLFxuICBuYW1lLFxuICBkb2N0b3JfdHlwZSxcbiAgcGhvbmVfbnVtLFxuICB0aW1lX3NlbGVjdGVkLFxuICBkYXRlX3NlbGVjdGVkLFxuICBwbGFudCxcbiAgY2hlY2tJblRpbWUsXG4gIHBpY2tlZF93aGF0LFxuICBjaGVja0luLFxuICBtb3JlX2RldGFpbCxcbiAgY29tcGFueVxuKSB7XG4gIGNvbnN0IHF1ZXJ5ID1cbiAgICBcIklOU0VSVCBJTlRPIGhlYWx0aF9jYXJlIChoZWFsdGhfaWQsIHVzZXJfaWQsIG5hbWUsIGRvY3Rvcl90eXBlLCBwaG9uZV9udW0sIHRpbWVfc2VsZWN0ZWQsIGRhdGVfc2VsZWN0ZWQsIHBsYW50LCBjaGVja0luVGltZSwgcGlja2VkX3doYXQsIGNoZWNrSW4sIG1vcmVfZGV0YWlsLGNvbXBhbnkpIFZBTFVFUyAoPywgPyw/LD8sPyw/LD8sPyw/LD8sPyw/LD8pXCI7XG4gIGNvbnN0IHZhbHVlcyA9IFtcbiAgICBoZWFsdGhfaWQsXG4gICAgdXNlcl9pZCxcbiAgICBuYW1lLFxuICAgIGRvY3Rvcl90eXBlLFxuICAgIHBob25lX251bSxcbiAgICB0aW1lX3NlbGVjdGVkLFxuICAgIGRhdGVfc2VsZWN0ZWQsXG4gICAgcGxhbnQsXG4gICAgY2hlY2tJblRpbWUsXG4gICAgcGlja2VkX3doYXQsXG4gICAgY2hlY2tJbixcbiAgICBtb3JlX2RldGFpbCxcbiAgICBjb21wYW55XG4gIF07XG4gIHRyeSB7XG4gICAgYXdhaXQgZXhlY3V0ZVF1ZXJ5KHF1ZXJ5LCB2YWx1ZXMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IGVycm9yOyAvLyBSZXRocm93IHRoZSBlcnJvciB0byBoYW5kbGUgaXQgaW4gdGhlIGNhbGxlclxuICB9XG59XG4vLyBOb3cgeW91IGNhbiB1c2UgZXhlY3V0ZVF1ZXJ5IHRvIHJ1biBNeVNRTCBxdWVyaWVzXG5jb25zdCBnZXRIZWFsdGggPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHF1ZXJ5ID0gXCJTRUxFQ1QgKiBGUk9NIGhlYWx0aF9jYXJlXCI7XG4gIGNvbnN0IGhlYWx0aCA9IGF3YWl0IGV4ZWN1dGVRdWVyeShxdWVyeSk7XG4gIHJldHVybiBoZWFsdGg7XG59O1xuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVkSGVhbHRoKHBob25lX251bSwgbW9yZV9kZXRhaWwsIGhlYWx0aF9pZCxjb21wYW55KSB7XG4gIGNvbnN0IHF1ZXJ5ID1cbiAgICBcIlVQREFURSBoZWFsdGhfY2FyZSBTRVQgcGhvbmVfbnVtID0gPyxtb3JlX2RldGFpbCA9ID8sY29tcGFueSA9ID8gV0hFUkUgaGVhbHRoX2lkID0gP1wiO1xuICAgIGNvbnN0IHZhbHVlcyA9IFtwaG9uZV9udW0sIG1vcmVfZGV0YWlsLCBjb21wYW55LCBoZWFsdGhfaWRdXG5cbiAgdHJ5IHtcbiAgICBhd2FpdCBleGVjdXRlUXVlcnkocXVlcnksIHZhbHVlcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgZXJyb3I7IC8vIFJldGhyb3cgdGhlIGVycm9yIHRvIGhhbmRsZSBpdCBpbiB0aGUgY2FsbGVyXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlSGVhbHRoQ2FyZShoZWFsdGhfaWQpIHtcbiAgY29uc3QgcXVlcnkgPVxuICAgIFwiREVMRVRFIEZST00gaGVhbHRoX2NhcmUgV0hFUkUgaGVhbHRoX2lkID0gP1wiO1xuICBjb25zdCB2YWx1ZXMgPSBbaGVhbHRoX2lkXTtcblxuICB0cnkge1xuICAgIGF3YWl0IGV4ZWN1dGVRdWVyeShxdWVyeSwgdmFsdWVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBlcnJvcjsgLy8gUmV0aHJvdyB0aGUgZXJyb3IgdG8gaGFuZGxlIGl0IGluIHRoZSBjYWxsZXJcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoZWFsdGgocmVxLCByZXMpIHtcbiAgaWYgKHJlcS5tZXRob2QgPT09IFwiR0VUXCIpIHtcbiAgICAvLyBIYW5kbGUgR0VUIHJlcXVlc3QsIGUuZy4sIGZldGNoIGRhdGEgZnJvbSBNeVNRTFxuICAgIGNvbnN0IGhlYWx0aCA9IGF3YWl0IGdldEhlYWx0aCgpO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGhlYWx0aCk7XG4gIH0gZWxzZSBpZiAocmVxLm1ldGhvZCA9PT0gXCJQT1NUXCIpIHtcbiAgICAvLyBIYW5kbGUgUE9TVCByZXF1ZXN0LCBlLmcuLCBpbnNlcnQgZGF0YSBpbnRvIE15U1FMXG4gICAgY29uc3Qge1xuICAgICAgaGVhbHRoX2lkLFxuICAgICAgdXNlcl9pZCxcbiAgICAgIG5hbWUsXG4gICAgICBkb2N0b3JfdHlwZSxcbiAgICAgIHBob25lX251bSxcbiAgICAgIHRpbWVfc2VsZWN0ZWQsXG4gICAgICBkYXRlX3NlbGVjdGVkLFxuICAgICAgcGxhbnQsXG4gICAgICBjaGVja0luVGltZSxcbiAgICAgIHBpY2tlZF93aGF0LFxuICAgICAgY2hlY2tJbixcbiAgICAgIG1vcmVfZGV0YWlsLFxuICAgICAgY29tcGFueVxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwb3N0VXNlcihcbiAgICAgICAgaGVhbHRoX2lkLFxuICAgICAgICB1c2VyX2lkLFxuICAgICAgICBuYW1lLFxuICAgICAgICBkb2N0b3JfdHlwZSxcbiAgICAgICAgcGhvbmVfbnVtLFxuICAgICAgICB0aW1lX3NlbGVjdGVkLFxuICAgICAgICBkYXRlX3NlbGVjdGVkLFxuICAgICAgICBwbGFudCxcbiAgICAgICAgY2hlY2tJblRpbWUsXG4gICAgICAgIHBpY2tlZF93aGF0LFxuICAgICAgICBjaGVja0luLFxuICAgICAgICBtb3JlX2RldGFpbCxcbiAgICAgICAgY29tcGFueVxuICAgICAgKTtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogXCJEYXRhIGluc2VydGVkIHN1Y2Nlc3NmdWxseVwiIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW5zZXJ0aW5nIGRhdGE6XCIsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCIgfSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09IFwiUFVUXCIpIHtcbiAgICAvLyBIYW5kbGUgUFVUIHJlcXVlc3QsIGUuZy4sIHVwZGF0ZSBkYXRhIGluIE15U1FMXG4gICAgY29uc3QgeyBwaG9uZV9udW0sIG1vcmVfZGV0YWlsLCBoZWFsdGhfaWQsY29tcGFueSB9ID0gcmVxLmJvZHk7IC8vIEFzc3VtaW5nIHlvdSByZWNlaXZlIGhlYWx0aElkIGFuZCB3aG9QaWNrZWRUaGlzIGluIHRoZSByZXF1ZXN0IGJvZHlcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdXBkYXRlZEhlYWx0aChwaG9uZV9udW0sIG1vcmVfZGV0YWlsLCBoZWFsdGhfaWQsY29tcGFueSk7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6IFwiRGF0YSB1cGRhdGVkIHN1Y2Nlc3NmdWxseVwiIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgdXBkYXRpbmcgZGF0YTpcIiwgZXJyb3IpO1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIiB9KTtcbiAgICB9XG4gIH1cbiAgZWxzZSBpZiAocmVxLm1ldGhvZCA9PT0gXCJERUxFVEVcIikge1xuICAgIGNvbnN0ICBoZWFsdGhfaWQgID0gcmVxLnF1ZXJ5LmhlYWx0aElkO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBkZWxldGVIZWFsdGhDYXJlKGhlYWx0aF9pZClcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogXCJEYXRhIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5XCIgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZWxldGluZyBkYXRhOlwiLCBlcnJvcik7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBgSW50ZXJuYWwgU2VydmVyIEVycm9yYCB9KTtcbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiBcIlRoaXMgbWV0aG9kIGlzIG5vdCBhbGxvd2VkXCIgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJwb29sIiwiZXhlY3V0ZVF1ZXJ5IiwicXVlcnkiLCJ2YWx1ZXMiLCJjb25uZWN0aW9uIiwiZ2V0Q29ubmVjdGlvbiIsInJvd3MiLCJleGVjdXRlIiwicmVsZWFzZSIsInBvc3RVc2VyIiwiaGVhbHRoX2lkIiwidXNlcl9pZCIsIm5hbWUiLCJkb2N0b3JfdHlwZSIsInBob25lX251bSIsInRpbWVfc2VsZWN0ZWQiLCJkYXRlX3NlbGVjdGVkIiwicGxhbnQiLCJjaGVja0luVGltZSIsInBpY2tlZF93aGF0IiwiY2hlY2tJbiIsIm1vcmVfZGV0YWlsIiwiY29tcGFueSIsImVycm9yIiwiZ2V0SGVhbHRoIiwiaGVhbHRoIiwidXBkYXRlZEhlYWx0aCIsImRlbGV0ZUhlYWx0aENhcmUiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiYm9keSIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiaGVhbHRoSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/health/health_api.js\n");

/***/ }),

/***/ "(api)/./src/server/mySQL.js":
/*!*****************************!*\
  !*** ./src/server/mySQL.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\n// Create a MySQL connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"\",\n    database: \"Test_Booking\",\n    waitForConnections: true,\n    connectionLimit: 500,\n    queueLimit: 0\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL215U1FMLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtQztBQUVuQyxpQ0FBaUM7QUFDakMsTUFBTUMsT0FBT0QsZ0VBQWdCRSxDQUFDO0lBQzVCQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLG9CQUFvQjtJQUNwQkMsaUJBQWlCO0lBQ2pCQyxZQUFZO0FBQ2Q7QUFFQSxpRUFBZVIsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2UtYm9va2luZy8uL3NyYy9zZXJ2ZXIvbXlTUUwuanM/YTRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwyL3Byb21pc2UnO1xuXG4vLyBDcmVhdGUgYSBNeVNRTCBjb25uZWN0aW9uIHBvb2xcbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIHVzZXI6ICdyb290JyxcbiAgcGFzc3dvcmQ6ICcnLFxuICBkYXRhYmFzZTogJ1Rlc3RfQm9va2luZycsXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcbiAgY29ubmVjdGlvbkxpbWl0OiA1MDAsXG4gIHF1ZXVlTGltaXQ6IDAsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcG9vbDsiXSwibmFtZXMiOlsibXlzcWwiLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsIndhaXRGb3JDb25uZWN0aW9ucyIsImNvbm5lY3Rpb25MaW1pdCIsInF1ZXVlTGltaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/server/mySQL.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/health/health_api.js"));
module.exports = __webpack_exports__;

})();